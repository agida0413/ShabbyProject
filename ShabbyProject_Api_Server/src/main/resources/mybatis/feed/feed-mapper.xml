<?xml version="1.0" encoding="UTF-8"?>

<!-- 피드관련-->
<!DOCTYPE mapper
 PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
 "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
 
 <mapper namespace="com.sist.mapper.feed.FeedMapper">
 <!-- 사용자 피드에서 게시물 리스트를 제외한 피드정보 가져오기 ( 닉네임,프로필사진 ,자기소개 , 비공개여부 , 게시물등록수 , 팔로잉수 , 팔로워 수 ) -->
 <select id="userFeedInfoFromMember" parameterType="RequestUserFeedDTO" resultType="ResponseUserFeedDTO">
	SELECT profile,nickname,introduce,locked, <!-- 프로필사진,닉네임,자기소개,비공개/공개 여부 -->
	(
	SELECT COUNT(*) FROM POST     
	WHERE id_num= m.id_num
	) as postAmount, <!-- 게시글 개수-->
	(
	SELECT COUNT(*) FROM FOLLOW 
	WHERE following_id= m.id_num
	AND 
	approve='FOLLOWOK'
	) as followerAmount,  <!-- 팔로워 수 -->
	(
	SELECT COUNT(*) FROM FOLLOW  
	WHERE id_num= m.id_num
	AND 
	approve='FOLLOWOK'
	) as followingAmount  <!-- 팔로잉 수 -->
	<!-- 현재 조회할 피드가 현재 세션 유저가 아니라면 , (내 피드가 아닌 다른 유저피드라면) 셀렉트할 컬럼 추가-->
	<if test="!itsMe">
	,
	(
	SELECT COALESCE(COUNT(*),0) FROM FOLLOW   <!--팔로우 테이블에서 카운트 값을 -->
	WHERE  <!--어디서-->
	id_num = #{sessionIdNum} <!-- 회원 고유번호가 매개변수로 받은 현재 세션 회원번호-->		  	
	AND  <!--그리고-->
	following_id= <!--팔로우 테이블의 팔로우하는 아이디 고유번호가  -->
	(
	SELECT id_num FROM MEMBER  <!-- (서브쿼리)멤버테이블에 있는 회원고유번호를 -->
	WHERE nickname=#{nickname}  <!-- 닉네임 컬럼 = 매개변수로 받은  닉네임 -->
	) 
    AND  <!-- 그리고 -->
	approve='FOLLOWOK' <!--승인상태가 팔로우 요청승인인 상태 -->
	) as followOKCount	<!-- alias followOKCount-->
	,
	(
	SELECT COALESCE(COUNT(*),0) FROM FOLLOW <!-- 팔로우 테이블에서 카운트 값을 -->
	WHERE  <!--어디서-->
	id_num = #{sessionIdNum}	<!-- 회원 고유번호가 매개변수로 받은 현재 세션 회원번호-->		  	
	AND<!--그리고-->
	following_id= <!--팔로우 테이블의 팔로우하는 아이디 고유번호가  -->
	(
	SELECT id_num FROM MEMBER <!-- (서브쿼리)멤버테이블에 있는 회원고유번호를 -->
	WHERE nickname=#{nickname} <!-- 닉네임 컬럼 = 매개변수로 받은  닉네임 -->
	) 	 
	AND  <!-- 그리고 -->
	approve='FOLLOWNO'<!--승인상태가 팔로우 요청대기 상태 -->
	) as followNOCount<!-- alias followNOCount-->
	,
	(
	SELECT COALESCE(COUNT(*),0) FROM FOLLOW <!-- 팔로우 테이블에서 카운트 값을 -->
	WHERE  <!--어디서-->
	id_num = #{sessionIdNum}	<!-- 회원 고유번호가 매개변수로 받은 현재 세션 회원번호-->		 	  	
	AND<!--그리고-->
	following_id= <!--팔로우 테이블의 팔로우하는 아이디 고유번호가  -->
	(
	SELECT id_num FROM MEMBER <!-- (서브쿼리)멤버테이블에 있는 회원고유번호를 -->
	WHERE nickname=#{nickname}<!-- 닉네임 컬럼 = 매개변수로 받은  닉네임 -->
	) 	  <!--팔로우 요청 상태여부 상관없는 개수 -->
	) as followAllCount <!--alias followAllCount-->
	</if>
	FROM MEMBER m <!-- 멤버테이블에서 -->
	WHERE nickname=#{nickname}  <!-- 닉네임이 매개변수로 받은 닉네임 인곳에서-->
</select>

<!--사용자  피드에서 게시물리스트 가져오기-->
 <select id="userFeedPostList" parameterType="RequestUserFeedDTO" resultType="ResponsePostListDTO">
	SELECT p.post_num, post_img_url ,onlyMe,COALESCE(pl.likeCount,0) AS likeCount <!-- 게시물 고유번호 , 이미지 url , 나만보기 여부 , 좋아요 수 -->
	FROM POST p <!-- 게시물 테이블에서 -->
	LEFT JOIN  <!--left조인-->
	(
	SELECT post_num,COUNT(*) AS likeCount  <!--게시물고유번호,  게시물 고유번호로 그루핑 된 카운트 -->
	FROM post_like       <!-- 게시물 좋아요 테이블에서 -->
	GROUP BY post_num    <!-- 게시물 고유번호로 그루핑 -->
 	) pl
    ON p.post_num=pl.post_num <!-- 게시물 번호 기준 조인 -->
    LEFT JOIN   <!-- 두번째 조인 -->
    ( 
    SELECT pi.post_num, pi.post_img_url <!-- 게시물 고유번호 , 게시물 고유번호로 그루핑된 게시물 이미지 -->
    FROM post_img pi <!-- 게시물 이미지 테이블에서 -->
    INNER JOIN  <!--이너조인 -->
    (
    SELECT post_num, MIN(post_img_num) AS min_img_num <!-- 게시물 번호, 다중 이미지 업로드이기때문에 게시물 번호당 몇개의 레코드가 저장될지 알 수 없는 상황 , pk min집계로 가장 첫번째로 등록된 사진 하나를 갖고옴-->
    FROM post_img <!-- 게시물 이미지 테이블에서 -->
    GROUP BY post_num <!--게시물 번호로 그루핑 -->
    ) subquery 
    ON pi.post_num = subquery.post_num <!--현 인라인뷰 고유번호와 서브쿼리 고유번호 기준 조인 --> 
    AND pi.post_img_num = subquery.min_img_num <!-- 그리고 인라인 뷰 이미지번호와 , 서브쿼리의 위에서 pk min값으로 가져온 하나의 url 조인 -->
    ) pi
    ON p.post_num = pi.post_num <!-- 게시물 테이블의 고유번호와 두번째 인라인뷰의 게시물 고유번호 조인 -->
    WHERE p.id_num= <!-- 게시물 테이블-->
    (
    SELECT id_num FROM MEMBER <!-- 회원테이블에서 -->
    WHERE nickname=#{nickname} <!-- 닉네임이 매개변수로 받은닉네임일 경우에-->
    )
    ORDER BY create_date DESC  <!-- 최신순 정렬 -->
    LIMIT #{rowSize} OFFSET #{startRow}  <!--페이징 -->
 </select>
 
<!--현재 세션 회원 프로필 이미지 갖고오기-->
 <select id="profileImgGet" parameterType="int" resultType="String">
	 SELECT profile FROM MEMBER
	 WHERE id_num=#{idNum}
 </select>
 
 <!--프로필 사진 업데이트-->
 <update id="profileImgUpdate" parameterType="UpdateProfileDTO">
	 UPDATE MEMBER SET
	 profile=#{profile}
	 WHERE id_num=#{idNum}
 </update>
 
 

 </mapper>